{"Structs/CallPresentationError.html#/s:10Foundation13CustomNSErrorP11errorDomainSSvpZ":{"name":"errorDomain","parent_name":"CallPresentationError"},"Structs/CallPresentationError.html#/s:10Foundation13CustomNSErrorP9errorCodeSivp":{"name":"errorCode","parent_name":"CallPresentationError"},"Structs/CallPresentationError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"CallPresentationError"},"Structs/CallPresentationError.html#/s:10Foundation14LocalizedErrorP13failureReasonSSSgvp":{"name":"failureReason","parent_name":"CallPresentationError"},"Structs/CallPresentationError.html#/s:10Foundation14LocalizedErrorP18recoverySuggestionSSSgvp":{"name":"recoverySuggestion","parent_name":"CallPresentationError"},"Structs/CallPresentationError.html#/s:10Foundation13CustomNSErrorP13errorUserInfoSDySSypGvp":{"name":"errorUserInfo","parent_name":"CallPresentationError"},"Structs/CallPresentationError.html":{"name":"CallPresentationError","abstract":"<p>An error that occurs during the presentation of an instance of <code>CallViewController</code>.</p>"},"Extensions/Foundation.Timer.html#/s:So7NSTimerC7BandyerE8intervalSdvp":{"name":"interval","abstract":"<p>Undocumented</p>","parent_name":"Foundation.Timer"},"Extensions/Foundation.Timer.html":{"name":"Foundation.Timer"},"Functions.html#/c:@F@NSStringFromBCHChatClientState":{"name":"NSStringFromBCHChatClientState","abstract":"<p>An utility function that translates <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BCHChatClientState.html\">BCHChatClientState</a></code> values in a human readable string.</p>"},"Functions.html#/c:@F@NSStringFromBCXCallDirection":{"name":"NSStringFromBCXCallDirection","abstract":"<p>An utility function that returns a human readable string from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BCXCallDirection.html\">BCXCallDirection</a></code> enumeration value.</p>"},"Functions.html#/c:@F@NSStringFromBCXCallState":{"name":"NSStringFromBCXCallState","abstract":"<p>An utility function that returns a human readable string from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BCXCallState.html\">BCXCallState</a></code> enumeration value.</p>"},"Functions.html#/c:@F@NSStringFromBCXCallEndReason":{"name":"NSStringFromBCXCallEndReason","abstract":"<p>An utility function that returns a human readable string from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BCXCallEndReason.html\">BCXCallEndReason</a></code> enumeration value.</p>"},"Functions.html#/c:@F@NSStringFromBCXDeclineReason":{"name":"NSStringFromBCXDeclineReason","abstract":"<p>An utility function that returns a human readable string from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BCXDeclineReason.html\">BCXDeclineReason</a></code> enumeration value.</p>"},"Functions.html#/c:@F@NSStringFromBCXCallType":{"name":"NSStringFromBCXCallType","abstract":"<p>An utility function that returns a human readable string from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BCXCallType.html\">BCXCallType</a></code> enumeration value.</p>"},"Functions.html#/c:@F@NSStringFromBCXCallParticipantState":{"name":"NSStringFromBCXCallParticipantState","abstract":"<p>An utility function that returns a human readable string from call participant state enumeration value</p>"},"Functions.html#/c:@F@NSStringFromBCXUserStatus":{"name":"NSStringFromBCXUserStatus","abstract":"<p>An utility function that returns a human readable string from user state enumeration value</p>"},"Functions.html#/c:@F@NSStringFromBCXCallClientState":{"name":"NSStringFromBCXCallClientState","abstract":"<p>An utility function that translates <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/BCXCallClientState.html\">BCXCallClientState</a></code> values in a human readable string.</p>"},"Type%20Definitions.html#/c:BDKChatNotification.h@T@BCHChatNotification":{"name":"BCHChatNotification","abstract":"<p>Undocumented</p>"},"Protocols/CallWindowDelegate.html#/c:@M@Bandyer@objc(pl)BDKCallWindowDelegate(im)callWindowDidFinish:":{"name":"callWindowDidFinish(_:)","abstract":"<p>Invoked when the window is ready to be dismissed.</p>","parent_name":"CallWindowDelegate"},"Protocols/CallWindowDelegate.html#/c:@M@Bandyer@objc(pl)BDKCallWindowDelegate(im)callWindow:openChatWith:":{"name":"callWindow(_:openChatWith:)","abstract":"<p>Invoked when the user has requested to open a chat with another user.","parent_name":"CallWindowDelegate"},"Protocols/CallBannerControllerDelegate.html#/c:@M@Bandyer@objc(pl)BDKCallBannerControllerDelegate(im)callBannerController:didTouch:":{"name":"callBannerController(_:didTouch:)","abstract":"<p>Invoked when the user has touched the &ldquo;return to call&rdquo; bar at the top of the screen.</p>","parent_name":"CallBannerControllerDelegate"},"Protocols/CallBannerControllerDelegate.html#/c:@M@Bandyer@objc(pl)BDKCallBannerControllerDelegate(im)callBannerController:willShow:":{"name":"callBannerController(_:willShow:)","abstract":"<p>Invoked when the &ldquo;return to call&rdquo; bar is about to be hidden.</p>","parent_name":"CallBannerControllerDelegate"},"Protocols/CallBannerControllerDelegate.html#/c:@M@Bandyer@objc(pl)BDKCallBannerControllerDelegate(im)callBannerController:willHide:":{"name":"callBannerController(_:willHide:)","abstract":"<p>Invoked when the &ldquo;return to call&rdquo; bar is about to be shown.</p>","parent_name":"CallBannerControllerDelegate"},"Protocols/MessageNotificationControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHMessageNotificationControllerDelegate(im)messageNotificationController:didTouch:":{"name":"messageNotificationController(_:didTouch:)","abstract":"<p>This method will be called when the user touches an in-app chat notification.</p>","parent_name":"MessageNotificationControllerDelegate"},"Protocols/ChannelViewControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHChannelViewControllerDelegate(im)channelViewControllerDidFinish:":{"name":"channelViewControllerDidFinish(_:)","abstract":"<p>Invoked when the view controller must be dismissed by the presenting view controller.","parent_name":"ChannelViewControllerDelegate"},"Protocols/ChannelViewControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHChannelViewControllerDelegate(im)channelViewController:didTouchNotification:":{"name":"channelViewController(_:didTouch:)","abstract":"<p>Invoked when the user touched an in-app touch notification.</p>","parent_name":"ChannelViewControllerDelegate"},"Protocols/ChannelViewControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHChannelViewControllerDelegate(im)channelViewController:didTouchBanner:":{"name":"channelViewController(_:didTouch:)","abstract":"<p>Invoked when the user touched the &ldquo;return to call&rdquo; bar at the top of the screen.","parent_name":"ChannelViewControllerDelegate"},"Protocols/ChannelViewControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHChannelViewControllerDelegate(im)channelViewController:willHide:":{"name":"channelViewController(_:willHide:)","abstract":"<p>Invoked when the &ldquo;return to call&rdquo; bar at the top of the screen is about to be hidden.</p>","parent_name":"ChannelViewControllerDelegate"},"Protocols/ChannelViewControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHChannelViewControllerDelegate(im)channelViewController:willShow:":{"name":"channelViewController(_:willShow:)","abstract":"<p>Invoked when the &ldquo;return to call&rdquo; bar at the top of the screen is about to show.</p>","parent_name":"ChannelViewControllerDelegate"},"Protocols/ChannelViewControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHChannelViewControllerDelegate(im)channelViewController:didTapAudioCallWith:":{"name":"channelViewController(_:didTapAudioCallWith:)","abstract":"<p>Invoked when the user has tapped the &ldquo;voice call&rdquo; <code>UIBarButtonItem</code> embedded in the view controller&rsquo;s navigation bar.","parent_name":"ChannelViewControllerDelegate"},"Protocols/ChannelViewControllerDelegate.html#/c:@M@Bandyer@objc(pl)BCHChannelViewControllerDelegate(im)channelViewController:didTapVideoCallWith:":{"name":"channelViewController(_:didTapVideoCallWith:)","abstract":"<p>Invoked when the user has tapped the &ldquo;video call&rdquo; <code>UIBarButtonItem</code> embedded in the view controller&rsquo;s navigation bar.","parent_name":"ChannelViewControllerDelegate"},"Protocols/BDKCallViewControllerDelegate.html#/c:objc(pl)BDKCallViewControllerDelegate(im)callViewControllerDidFinish:":{"name":"-callViewControllerDidFinish:","abstract":"<p>Invoked when the view controller has finished handling a call, and it is ready to be dismissed.</p>","parent_name":"BDKCallViewControllerDelegate"},"Protocols/BDKCallViewControllerDelegate.html#/c:objc(pl)BDKCallViewControllerDelegate(im)callViewControllerDidPressBack:":{"name":"-callViewControllerDidPressBack:","abstract":"<p>Invoked when the user has pressed the back button, and the view controller is ready to be dismissed.</p>","parent_name":"BDKCallViewControllerDelegate"},"Protocols/BDKCallViewControllerDelegate.html#/c:objc(pl)BDKCallViewControllerDelegate(im)callViewController:openChatWith:":{"name":"-callViewController:openChatWith:","abstract":"<p>Invoked when the view controller is trying to start a chat.</p>","parent_name":"BDKCallViewControllerDelegate"},"Protocols/BDKIntent.html#/c:objc(pl)BDKIntent(py)UUID":{"name":"UUID","abstract":"<p>The intent unique identifier.</p>","parent_name":"BDKIntent"},"Protocols/BDKInAppNotificationsCoordinator.html#/c:objc(pl)BDKInAppNotificationsCoordinator(py)chatListener":{"name":"chatListener","abstract":"<p>The <code>InAppChatNotificationTouchListener</code> that is going to be called whenever a chat notification is touched by the user.","parent_name":"BDKInAppNotificationsCoordinator"},"Protocols/BDKInAppNotificationsCoordinator.html#/c:objc(pl)BDKInAppNotificationsCoordinator(py)fileShareListener":{"name":"fileShareListener","abstract":"<p>The <code>InAppFileShareNotificationTouchListener</code> that is going to be called whenever a file notification is touched by the user.","parent_name":"BDKInAppNotificationsCoordinator"},"Protocols/BDKInAppNotificationsCoordinator.html#/c:objc(pl)BDKInAppNotificationsCoordinator(py)formatter":{"name":"formatter","abstract":"<p>The formatter instance the SDK will use to format the user details when an in-app notification is presented to the user.","parent_name":"BDKInAppNotificationsCoordinator"},"Protocols/BDKInAppNotificationsCoordinator.html#/c:objc(pl)BDKInAppNotificationsCoordinator(im)start":{"name":"-start","abstract":"<p>Starts the in-app notifications services. From this moment on whenever a chat message or a new file is received an in-app notification will be presented to the user.</p>","parent_name":"BDKInAppNotificationsCoordinator"},"Protocols/BDKInAppNotificationsCoordinator.html#/c:objc(pl)BDKInAppNotificationsCoordinator(im)stop":{"name":"-stop","abstract":"<p>Stops the in-app notifications services.</p>","parent_name":"BDKInAppNotificationsCoordinator"},"Protocols/BDKInAppFileShareNotificationTouchListener.html#/c:objc(pl)BDKInAppFileShareNotificationTouchListener(im)didTouchFileShareNotification:":{"name":"-didTouchFileShareNotification:","abstract":"<p>Method called whenever the user touches a file share notification presented in-app.","parent_name":"BDKInAppFileShareNotificationTouchListener"},"Protocols/BDKInAppChatNotificationTouchListener.html#/c:objc(pl)BDKInAppChatNotificationTouchListener(im)didTouchChatNotification:":{"name":"-didTouchChatNotification:","abstract":"<p>Method called whenever the user touches a chat notification presented in-app.","parent_name":"BDKInAppChatNotificationTouchListener"},"Protocols/BDKUserInfoFetcher.html#/c:objc(pl)BDKUserInfoFetcher(im)fetchUsers:completion:":{"name":"-fetchUsers:completion:","abstract":"<p>This method will be invoked when user information are needed by the BandyerSDK.","parent_name":"BDKUserInfoFetcher"},"Protocols/BDFUser.html#/c:objc(pl)BDFUser(py)alias":{"name":"alias","abstract":"<p>The user&rsquo;s alias (i.e. identifier).</p>","parent_name":"BDFUser"},"Protocols/BDFUser.html#/c:objc(pl)BDFUser(py)firstName":{"name":"firstName","abstract":"<p>The user&rsquo;s first name.</p>","parent_name":"BDFUser"},"Protocols/BDFUser.html#/c:objc(pl)BDFUser(py)lastName":{"name":"lastName","abstract":"<p>The user&rsquo;s last name.</p>","parent_name":"BDFUser"},"Protocols/BDFUser.html#/c:objc(pl)BDFUser(py)email":{"name":"email","abstract":"<p>The user&rsquo;s email address.</p>","parent_name":"BDFUser"},"Protocols/BDFUser.html#/c:objc(pl)BDFUser(py)imageFilename":{"name":"imageFilename","abstract":"<p>The user&rsquo;s image filename.</p>","parent_name":"BDFUser"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClient:didReceiveIncomingCall:":{"name":"-callClient:didReceiveIncomingCall:","abstract":"<p>Invoked when a call client detects a new incoming call.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientWillStart:":{"name":"-callClientWillStart:","abstract":"<p>Invoked when a call client will start.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientDidStart:":{"name":"-callClientDidStart:","abstract":"<p>Invoked when a call client is started successfully and it is connected to Bandyer platform.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientDidStartReconnecting:":{"name":"-callClientDidStartReconnecting:","abstract":"<p>Invoked when a call client has started the reconnection process to Bandyer platform.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientWillPause:":{"name":"-callClientWillPause:","abstract":"<p>Invoked when a call client will pause.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientDidPause:":{"name":"-callClientDidPause:","abstract":"<p>Invoked when a call client did pause.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientWillStop:":{"name":"-callClientWillStop:","abstract":"<p>Invoked when a call client will stop.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientDidStop:":{"name":"-callClientDidStop:","abstract":"<p>Invoked when a call client is stopped.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientWillResume:":{"name":"-callClientWillResume:","abstract":"<p>Invoked when a call client is starting to resume.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClientDidResume:":{"name":"-callClientDidResume:","abstract":"<p>Invoked when a call client did resume successfully.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClientObserver.html#/c:objc(pl)BCXCallClientObserver(im)callClient:didFailWithError:":{"name":"-callClient:didFailWithError:","abstract":"<p>Invoked when a call client fails because of a fatal error.</p>","parent_name":"BCXCallClientObserver"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(py)user":{"name":"user","abstract":"<p>The user currently authenticated with bandyer platform.</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(py)state":{"name":"state","abstract":"<p>A property holding the current state of the client.</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)isStopped":{"name":"-isStopped","abstract":"<p>Returns a boolean flag indicating whether the client is stopped or not</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)isStarting":{"name":"-isStarting","abstract":"<p>Returns a boolean flag indicating whether the client is starting or not</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)isRunning":{"name":"-isRunning","abstract":"<p>Returns a boolean flag indicating whether the client is running or not</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)isPaused":{"name":"-isPaused","abstract":"<p>Returns a boolean flag indicating whether the client is paused or not</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)isResuming":{"name":"-isResuming","abstract":"<p>Returns a boolean flag indicating whether the client is resuming or not</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)isReconnecting":{"name":"-isReconnecting","abstract":"<p>Returns a boolean flag indicating whether the client is reconnecting or not</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Adds an observer that will be notified synchronously on a private background queue. The observer object will be held weakly.</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)addObserver:queue:":{"name":"-addObserver:queue:","abstract":"<p>Adds an observer specifying on which dispatch queue it must be notified. If a nil queue is provided the observer will be","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Removes a client observer.</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)start:":{"name":"-start:","abstract":"<p>Start the client, connecting it to bandyer&rsquo;s platform.</p>","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)resume":{"name":"-resume","abstract":"<p>Resumes the client, reconnecting it to bandyer&rsquo;s platform, after the client has been paused first.","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)pause":{"name":"-pause","abstract":"<p>Pause the client, disconnecting it from bandyer&rsquo;s platform.","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)stop":{"name":"-stop","abstract":"<p>Stop the client, disconnecting it from bandyer&rsquo;s platform. You should stop it when app is going to be terminated.","parent_name":"BCXCallClient"},"Protocols/BCXCallClient.html#/c:objc(pl)BCXCallClient(im)performAction:":{"name":"-performAction:","abstract":"<p>Performs the action provided as argument.","parent_name":"BCXCallClient"},"Protocols/BCXHandleProvider.html#/c:objc(pl)BCXHandleProvider(im)handleForAliases:completion:":{"name":"-handleForAliases:completion:","abstract":"<p>This method will be called whenever a CXHandle must be created for the aliases provided as first argument.","parent_name":"BCXHandleProvider"},"Protocols/BCXCallRegistryObserver.html#/c:objc(pl)BCXCallRegistryObserver(im)registry:didAddCall:":{"name":"-registry:didAddCall:","abstract":"<p>Invoked when a call is added to the registry.</p>","parent_name":"BCXCallRegistryObserver"},"Protocols/BCXCallRegistryObserver.html#/c:objc(pl)BCXCallRegistryObserver(im)registry:didRemoveCall:":{"name":"-registry:didRemoveCall:","abstract":"<p>Invoked when a call is removed from the registry.</p>","parent_name":"BCXCallRegistryObserver"},"Protocols/BCXCallRegistry.html#/c:objc(pl)BCXCallRegistry(py)calls":{"name":"calls","abstract":"<p>Returns an array of the calls currently being handled by the sdk.</p>","parent_name":"BCXCallRegistry"},"Protocols/BCXCallRegistry.html#/c:objc(pl)BCXCallRegistry(py)busy":{"name":"busy","abstract":"<p>A boolean flag indicating whether the sdk is busy processing a call, or not.</p>","parent_name":"BCXCallRegistry"},"Protocols/BCXCallRegistry.html#/c:objc(pl)BCXCallRegistry(im)callWithUUID:":{"name":"-callWithUUID:","abstract":"<p>Returns the call identified locally with the UUID provided as argument, or nil if a call with the identifier provided cannot be found.</p>","parent_name":"BCXCallRegistry"},"Protocols/BCXCallRegistry.html#/c:objc(pl)BCXCallRegistry(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Adds an observer that will be notified synchronously on a private background queue,","parent_name":"BCXCallRegistry"},"Protocols/BCXCallRegistry.html#/c:objc(pl)BCXCallRegistry(im)addObserver:queue:":{"name":"-addObserver:queue:","abstract":"<p>Adds an observer specifying on which dispatch queue it must be notified","parent_name":"BCXCallRegistry"},"Protocols/BCXCallRegistry.html#/c:objc(pl)BCXCallRegistry(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Removes the observer.</p>","parent_name":"BCXCallRegistry"},"Protocols/BCXUser.html#/c:objc(pl)BCXUser(py)status":{"name":"status","abstract":"<p>The user status flag</p>","parent_name":"BCXUser"},"Protocols/BCXUser.html#/c:objc(pl)BCXUser(im)isBusy":{"name":"-isBusy","abstract":"<p>Returns a flag indicating whether the user is in busy state, or not.</p>","parent_name":"BCXUser"},"Protocols/BCXUser.html#/c:objc(pl)BCXUser(im)isOnline":{"name":"-isOnline","abstract":"<p>Returns a flag indicating whether the user is online, or not.</p>","parent_name":"BCXUser"},"Protocols/BCXUser.html#/c:objc(pl)BCXUser(im)isOffline":{"name":"-isOffline","abstract":"<p>Returns a flag indicating whether the user is offline, or not.</p>","parent_name":"BCXUser"},"Protocols/BCXUser.html#/c:objc(pl)BCXUser(im)canUpgradeToVideo":{"name":"-canUpgradeToVideo","abstract":"<p>Returns a boolean flag indicating whether the user has permission to upgrade calls to audio/video calls, or not.</p>","parent_name":"BCXUser"},"Protocols/BCXCallParticipantsObserver.html#/c:objc(pl)BCXCallParticipantsObserver(im)onCallParticipantStateChanged:":{"name":"-onCallParticipantStateChanged:","abstract":"<p>Invoked when a call participant change its state.</p>","parent_name":"BCXCallParticipantsObserver"},"Protocols/BCXCallParticipantsObserver.html#/c:objc(pl)BCXCallParticipantsObserver(im)onCallParticipantUpgradedToVideo:":{"name":"-onCallParticipantUpgradedToVideo:","abstract":"<p>Invoked when a call participant upgrades to a video call.</p>","parent_name":"BCXCallParticipantsObserver"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(py)caller":{"name":"caller","abstract":"<p>The caller.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(py)callerId":{"name":"callerId","abstract":"<p>The caller id.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(py)callees":{"name":"callees","abstract":"<p>The array of callees and their state in the call.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(py)calleeIds":{"name":"calleeIds","abstract":"<p>The array of callee identifiers.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)calleeWithIdentifier:":{"name":"-calleeWithIdentifier:","abstract":"<p>Returns the participant object identified by the identifier provided, among the callee, if any.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(py)allParticipants":{"name":"allParticipants","abstract":"<p>An array containing all participants objects.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(py)opponents":{"name":"opponents","abstract":"<p>An array containing all opponents, that is all participants excluding the authenticated user.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(py)participantsIds":{"name":"participantsIds","abstract":"<p>The array of the participants identifiers.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)participantWithIdentifier:":{"name":"-participantWithIdentifier:","abstract":"<p>Returns the participant identified by the identifier provided, if any.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)authenticatedUserParticipant":{"name":"-authenticatedUserParticipant","abstract":"<p>Returns the participant object associated to the user authenticated with the call client, if any.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)isAuthenticatedUserTheCaller":{"name":"-isAuthenticatedUserTheCaller","abstract":"<p>Returns a boolean flag indicating whether the user authenticated with the call client, is the caller, or not.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Adds an observer, notified about changes in the state of a participant.","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)addObserver:queue:":{"name":"-addObserver:queue:","abstract":"<p>Adds an observer specifying on which dispatch queue it must be notified. If a nil queue is provided the observer will be","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Removes an observer. Once removed the observer will not receive participant state change notifications anymore.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)busy":{"name":"-busy","abstract":"<p>Returns an array of busy call participants.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)online":{"name":"-online","abstract":"<p>Returns an array of online call participants.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)offline":{"name":"-offline","abstract":"<p>Returns an array of offline call participants.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)hasEverybodyDeclined":{"name":"-hasEverybodyDeclined","abstract":"<p>Returns a flag indicating whether all callees have declined, or not</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)hasAnybodyAnswered":{"name":"-hasAnybodyAnswered","abstract":"<p>Returns a flag indicating whether at least one callee has answered, or not.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)hasAnybodyUpgradedToVideo":{"name":"-hasAnybodyUpgradedToVideo","abstract":"<p>Returns a flag indicating whether at least one participant has upgraded to video, or not.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipants.html#/c:objc(pl)BCXCallParticipants(im)upgradedToVideo":{"name":"-upgradedToVideo","abstract":"<p>Returns an array of call participants that have upgraded to video call.</p>","parent_name":"BCXCallParticipants"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(py)user":{"name":"user","abstract":"<p>The user object</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(py)userId":{"name":"userId","abstract":"<p>The user identifier.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(py)state":{"name":"state","abstract":"<p>The state of the user in the call</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(im)hasAnswered":{"name":"-hasAnswered","abstract":"<p>Returns a flag indicating whether the user has answered, or not.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(im)hasDeclined":{"name":"-hasDeclined","abstract":"<p>Returns a flag indicating whether the user has declined, or not.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(im)hasDeclinedByDoNotDisturb":{"name":"-hasDeclinedByDoNotDisturb","abstract":"<p>Returns a flag indicating whether the user has declined because of do not disturb, or not.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(im)didNotAnswer":{"name":"-didNotAnswer","abstract":"<p>Returns a flag indicating whether the user has missed the call, and did not answer.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(im)hasTimedOut":{"name":"-hasTimedOut","abstract":"<p>Returns a flag indicating whether the user has timed out while connecting the call.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(im)hasDisconnected":{"name":"-hasDisconnected","abstract":"<p>Returns a flag indicating whether the user has disconnected.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallParticipant.html#/c:objc(pl)BCXCallParticipant(im)didUpgradeToVideo":{"name":"-didUpgradeToVideo","abstract":"<p>Returns a flag indicating whether the participant has upgraded to video, or not.</p>","parent_name":"BCXCallParticipant"},"Protocols/BCXCallObserver.html#/c:objc(pl)BCXCallObserver(im)call:didChangeState:":{"name":"-call:didChangeState:","abstract":"<p>Invoked when a call changes state.</p>","parent_name":"BCXCallObserver"},"Protocols/BCXCallObserver.html#/c:objc(pl)BCXCallObserver(im)call:didUpdateOptions:":{"name":"-call:didUpdateOptions:","abstract":"<p>Invoked when a call updates its options.</p>","parent_name":"BCXCallObserver"},"Protocols/BCXCallObserver.html#/c:objc(pl)BCXCallObserver(im)call:didUpdateParticipants:":{"name":"-call:didUpdateParticipants:","abstract":"<p>Invoked when a call updates its participants.</p>","parent_name":"BCXCallObserver"},"Protocols/BCXCallObserver.html#/c:objc(pl)BCXCallObserver(im)callDidUpgradeToVideoCall:":{"name":"-callDidUpgradeToVideoCall:","abstract":"<p>Invoked when a call has upgraded to audio/video call.</p>","parent_name":"BCXCallObserver"},"Protocols/BCXCallObserver.html#/c:objc(pl)BCXCallObserver(im)callDidConnect:":{"name":"-callDidConnect:","abstract":"<p>Invoked when a call has connected.</p>","parent_name":"BCXCallObserver"},"Protocols/BCXCallObserver.html#/c:objc(pl)BCXCallObserver(im)callDidEnd:":{"name":"-callDidEnd:","abstract":"<p>Invoked when a call has ended.</p>","parent_name":"BCXCallObserver"},"Protocols/BCXCallObserver.html#/c:objc(pl)BCXCallObserver(im)call:didFailWithError:":{"name":"-call:didFailWithError:","abstract":"<p>Invoked when a call has failed.</p>","parent_name":"BCXCallObserver"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)uuid":{"name":"uuid","abstract":"<p>The local id of the call.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)sid":{"name":"sid","abstract":"<p>The remote id of the call.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)options":{"name":"options","abstract":"<p>The call options specified when creating a call.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)endReason":{"name":"endReason","abstract":"<p>The call&rsquo;s end reason.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)declineReason":{"name":"declineReason","abstract":"<p>If the call has been declined, this property will contain the decline reason.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)room":{"name":"room","abstract":"<p>The room where the call will take place.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Adds an observer that will be notified synchronously on a private background queue. The observer object will be held weakly.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)addObserver:queue:":{"name":"-addObserver:queue:","abstract":"<p>Adds an observer specifying on which dispatch queue it must be notified. If a nil queue is provided the observer will be","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Removes an observer.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)participants":{"name":"participants","abstract":"<p>The call participants.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isGroupCall":{"name":"-isGroupCall","abstract":"<p>Returns a flag indicating whether the call is a group call, or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)direction":{"name":"direction","abstract":"<p>The call&rsquo;s direction.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isIncoming":{"name":"-isIncoming","abstract":"<p>An utility method that returns a boolean value indicating whether the call is incoming or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isOutgoing":{"name":"-isOutgoing","abstract":"<p>An utility method that returns a boolean value indicating whether the call is outgoing or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)callType":{"name":"callType","abstract":"<p>A flag indicating the call type of the receiver. Once set, this flag doesn&rsquo;t change even if the receiver has upgraded to a video call.","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isAudioVideo":{"name":"-isAudioVideo","abstract":"<p>Returns a boolean flag indicating whether the call is a <code>BCXCallTypeAudioVideo</code> call, or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isAudioUpgradable":{"name":"-isAudioUpgradable","abstract":"<p>Returns a boolean flag indicating whether the call is a <code>BCXCallTypeAudioUpgradable</code> call, or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isAudioOnly":{"name":"-isAudioOnly","abstract":"<p>Returns a boolean flag indicating whether the call is a <code>BCXCallTypeAudioOnly</code> call, or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)canUpgradeToVideo":{"name":"-canUpgradeToVideo","abstract":"<p>Returns a boolean flag indicating whether the call can be upgraded to video, or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)didUpgradeToVideo":{"name":"-didUpgradeToVideo","abstract":"<p>Returns a boolean flag indicating whether the call has upgraded to video, or not.","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)state":{"name":"state","abstract":"<p>The call&rsquo;s current state.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)hasEnded":{"name":"-hasEnded","abstract":"<p>An utility method that returns a boolean value indicating whether the call has ended or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)hasFailed":{"name":"-hasFailed","abstract":"<p>An utility method that returns a boolean value indicating whether the call has failed or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isIdle":{"name":"-isIdle","abstract":"<p>An utility method that returns a boolean value indicating whether the call is idle or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isRinging":{"name":"-isRinging","abstract":"<p>An utility method that returns a boolean value indicating whether the call is ringing or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isDialing":{"name":"-isDialing","abstract":"<p>An utility method that returns a boolean value indicating whether the call is dialing or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isConnecting":{"name":"-isConnecting","abstract":"<p>An utility method that returns a boolean value indicating whether the call is connecting or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isConnected":{"name":"-isConnected","abstract":"<p>An utility method that returns a boolean value indicating whether the call is connected or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isAnswering":{"name":"-isAnswering","abstract":"<p>An utility method that returns a boolean value indicating whether the call is answering or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isDeclining":{"name":"-isDeclining","abstract":"<p>An utility method that returns a boolean value indicating whether the call is declining or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(im)isHangingUp":{"name":"-isHangingUp","abstract":"<p>An utility method that returns a boolean value indicating whether the call is hanging up or not.</p>","parent_name":"BCXCall"},"Protocols/BCXCall.html#/c:objc(pl)BCXCall(py)muted":{"name":"muted","abstract":"<p>A property indicating whether the local audio is muted or not</p>","parent_name":"BCXCall"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(py)completed":{"name":"completed","abstract":"<p>A boolean flag specifying whether the action has been completed, or not. When an action is fulfilled o is faulted it&rsquo;s marked","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(py)faulted":{"name":"faulted","abstract":"<p>A boolean flag specifying whether the action could not be fulfilled because of an error.</p>","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(py)result":{"name":"result","abstract":"<p>The result yield while performing the action, if any.</p>","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(py)error":{"name":"error","abstract":"<p>The error occurred while performing the action, if any.</p>","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(im)fulfill":{"name":"-fulfill","abstract":"<p>Fulfills the action with no result. Once the action is fulfilled, any continuation block attached, will be invoked.</p>","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(im)fulfillWithResult:":{"name":"-fulfillWithResult:","abstract":"<p>Fulfills the action with the result provided as argument. Once the action is fulfilled, any continuation block attached, will be invoked.</p>","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(im)failWithError:":{"name":"-failWithError:","abstract":"<p>Fails the action specifying the error occurred. Once the action is faulted, any continuation block attached, will be invoked.</p>","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(im)continueWith:":{"name":"-continueWith:","abstract":"<p>Add the continuation block provided as argument. The block will be executed when the action is marked as completed, regardless of whether","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(im)continueOnMainQueueWith:":{"name":"-continueOnMainQueueWith:","abstract":"<p>Add the continuation block provided as argument. The block will be executed when the action is marked as completed, regardless of whether","parent_name":"BCXAction"},"Protocols/BCXAction.html#/c:objc(pl)BCXAction(im)continueOnQueue:with:":{"name":"-continueOnQueue:with:","abstract":"<p>Add the continuation block provided as argument. The block will be executed when the action is marked as completed, regardless of whether","parent_name":"BCXAction"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientWillStart:":{"name":"-chatClientWillStart:","abstract":"<p>Invoked when a chat client will start.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientDidStart:":{"name":"-chatClientDidStart:","abstract":"<p>Invoked when a chat client is started successfully and it is connected to Bandyer platform.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientWillPause:":{"name":"-chatClientWillPause:","abstract":"<p>Invoked when a chat client will pause.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientDidPause:":{"name":"-chatClientDidPause:","abstract":"<p>Invoked when a chat client did pause.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientWillStop:":{"name":"-chatClientWillStop:","abstract":"<p>Invoked when a chat client will stop.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientDidStop:":{"name":"-chatClientDidStop:","abstract":"<p>Invoked when a chat client is stopped.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientWillResume:":{"name":"-chatClientWillResume:","abstract":"<p>Invoked when a chat client is starting to resume.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClientDidResume:":{"name":"-chatClientDidResume:","abstract":"<p>Invoked when a chat client did resume successfully.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClientObserver.html#/c:objc(pl)BCHChatClientObserver(im)chatClient:didFailWithError:":{"name":"-chatClient:didFailWithError:","abstract":"<p>Invoked when a chat client fails because of a fatal error.</p>","parent_name":"BCHChatClientObserver"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(py)state":{"name":"state","abstract":"<p>A property holding the current state of the client.</p>","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(im)addObserver:":{"name":"-addObserver:","abstract":"<p>@brief Adds an observer that will be notified synchronously on a private background queue.","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(im)addObserver:queue:":{"name":"-addObserver:queue:","abstract":"<p>@brief Adds an observer specifying on which dispatch queue it must be notified.</p>","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Removes a client observer.</p>","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(im)start:":{"name":"-start:","abstract":"<p>Start the client, connecting it to bandyer&rsquo;s platform.</p>","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(im)resume":{"name":"-resume","abstract":"<p>@brief Resumes the client, reconnecting it to bandyer&rsquo;s platform, after the client has been paused first.","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(im)pause":{"name":"-pause","abstract":"<p>@brief Pause the client, disconnecting it from bandyer&rsquo;s platform.","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html#/c:objc(pl)BCHChatClient(im)stop":{"name":"-stop","abstract":"<p>@brief Stop the client, disconnecting it from bandyer&rsquo;s platform. You should stop it when app is going to be terminated.","parent_name":"BCHChatClient"},"Protocols/BCHChatClient.html":{"name":"BCHChatClient","abstract":"<p>It&rsquo;s the main item required to connect to the Chat platform.</p>"},"Protocols/BCHChatClientObserver.html":{"name":"BCHChatClientObserver","abstract":"<p>An observer of a chat client object.</p>"},"Protocols/BCXAction.html":{"name":"BCXAction","abstract":"<p>An action represents a unit of work that must be performed by the system. It usually encapsulate the data needed to"},"Protocols/BCXCall.html":{"name":"BCXCall","abstract":"<p>It is the item representing a call in Bandyer platform."},"Protocols/BCXCallObserver.html":{"name":"BCXCallObserver","abstract":"<p>A call observer, notified about call events.</p>"},"Protocols/BCXCallParticipant.html":{"name":"BCXCallParticipant","abstract":"<p>Object representing a call participant and its state in the call."},"Protocols/BCXCallParticipants.html":{"name":"BCXCallParticipants","abstract":"<p>An object representing the participants inside a call and their state."},"Protocols/BCXCallParticipantsObserver.html":{"name":"BCXCallParticipantsObserver","abstract":"<p>An observer of call participants object, informed about participant state changes.</p>"},"Protocols/BCXUser.html":{"name":"BCXUser","abstract":"<p>Represents a bandyer&rsquo;s user with its status.</p>"},"Protocols/BCXCallRegistry.html":{"name":"BCXCallRegistry","abstract":"<p>A call registry acts as a repository containing the calls currently handled by the sdk."},"Protocols/BCXCallRegistryObserver.html":{"name":"BCXCallRegistryObserver","abstract":"<p>An observer of a call registry object.</p>"},"Protocols/BCXHandleProvider.html":{"name":"BCXHandleProvider","abstract":"<p>Objects conforming to this protocol are capable of converting user aliases (user ids) into a CXHandle object.</p>"},"Protocols/BCXCallClient.html":{"name":"BCXCallClient","abstract":"<p>It&rsquo;s the main item required to connect to the Bandyer platform."},"Protocols/BCXCallClientObserver.html":{"name":"BCXCallClientObserver","abstract":"<p>An observer of a call client object.</p>"},"Protocols/BDFUser.html":{"name":"BDFUser","abstract":"<p>Represents a user in the bandyer&rsquo;s platform.</p>"},"Protocols/BDKUserInfoFetcher.html":{"name":"BDKUserInfoFetcher","abstract":"<p>Classes conforming to this protocol must provide the user info display items for the user aliases requested."},"Protocols/BDKInAppChatNotificationTouchListener.html":{"name":"BDKInAppChatNotificationTouchListener","abstract":"<p>Represents a chat notification touch listener. Classes conforming to this protocol are notified when"},"Protocols/BDKInAppFileShareNotificationTouchListener.html":{"name":"BDKInAppFileShareNotificationTouchListener","abstract":"<p>Represents a file share notification touch listener. Classes conforming to this protocol are notified when"},"Protocols/BDKInAppNotificationsCoordinator.html":{"name":"BDKInAppNotificationsCoordinator","abstract":"<p>Represents the central coordination point for in-app notifications. When this service is started whenever a chat message is received or"},"Protocols/BDKIntent.html":{"name":"BDKIntent","abstract":"<p>Represents a request for an action that the sdk should fulfill on behalf of the user.</p>"},"Protocols/BDKCallViewControllerDelegate.html":{"name":"BDKCallViewControllerDelegate","abstract":"<p>Represents the delegate of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BDKCallViewController.html\">BDKCallViewController</a></code> instance."},"Protocols/ChannelViewControllerDelegate.html":{"name":"ChannelViewControllerDelegate","abstract":"<p>Represents the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ChannelViewController.html\">ChannelViewController</a></code>&lsquo;s delegate. Classes conforming to this class will be notified by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ChannelViewController.html\">ChannelViewController</a></code>"},"Protocols/MessageNotificationControllerDelegate.html":{"name":"MessageNotificationControllerDelegate","abstract":"<p>Represents the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MessageNotificationController.html\">MessageNotificationController</a></code> delegate."},"Protocols/CallBannerControllerDelegate.html":{"name":"CallBannerControllerDelegate","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CallBannerController.html\">CallBannerController</a></code>&lsquo;s delegate. <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CallBannerController.html\">CallBannerController</a></code> instances will notify their delegate about events that have or"},"Protocols/CallWindowDelegate.html":{"name":"CallWindowDelegate","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CallWindow.html\">CallWindow</a></code> delegate. <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CallWindow.html\">CallWindow</a></code> instances will notify their delegate when events requiring its intervention have occurred.</p>"},"Enums/CallPresentationErrorCode.html#/c:@M@Bandyer@E@BDKCallPresentationErrorCode@BDKCallPresentationErrorCodeUnsupportedIntentProvided":{"name":"unsupportedIntentProvided","abstract":"<p>An indication that the intent provided is not supported by the <code>CallViewController</code>.</p>","parent_name":"CallPresentationErrorCode"},"Enums/CallPresentationErrorCode.html#/c:@M@Bandyer@E@BDKCallPresentationErrorCode@BDKCallPresentationErrorCodeMissingCallViewControllerConfiguration":{"name":"missingCallViewControllerConfiguration","abstract":"<p>An indication that the <code>CallViewController</code> configuration is not set. Please set it by calling <code>setConfiguration(:)</code> on <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CallWindow.html\">CallWindow</a></code> instance.</p>","parent_name":"CallPresentationErrorCode"},"Enums/CallPresentationErrorCode.html#/c:@M@Bandyer@E@BDKCallPresentationErrorCode@BDKCallPresentationErrorCodeOpenDownloadsViewWithoutAnOngoingCall":{"name":"openDownloadsViewWithoutAnOngoingCall","abstract":"<p>An indication that there is not an ongoing call needed to open the Downloads view.</p>","parent_name":"CallPresentationErrorCode"},"Enums/CallPresentationErrorCode.html#/c:@M@Bandyer@E@BDKCallPresentationErrorCode@BDKCallPresentationErrorCodeAnotherCallOnGoing":{"name":"anotherCallOnGoing","abstract":"<p>An indication that there is another call ongoing.</p>","parent_name":"CallPresentationErrorCode"},"Enums/CallPresentationErrorCode.html#/c:@M@Bandyer@E@BDKCallPresentationErrorCode@BDKCallPresentationErrorCodeMissingCall":{"name":"missingCall","abstract":"<p>An indication that the call is already closed.</p>","parent_name":"CallPresentationErrorCode"},"Enums/BDKCallType.html#/c:@E@BDKCallType@BDKCallTypeAudioVideo":{"name":"BDKCallTypeAudioVideo","abstract":"<p>The call is audio/video.</p>","parent_name":"BDKCallType"},"Enums/BDKCallType.html#/c:@E@BDKCallType@BDKCallTypeAudioUpgradable":{"name":"BDKCallTypeAudioUpgradable","abstract":"<p>The call starts as an audio call and can be upgraded to a video call later on.</p>","parent_name":"BDKCallType"},"Enums/BDKCallType.html#/c:@E@BDKCallType@BDKCallTypeAudioOnly":{"name":"BDKCallTypeAudioOnly","abstract":"<p>The call is audio only and cannot be upgraded to video.</p>","parent_name":"BDKCallType"},"Enums/BDKCallType.html#/c:@E@BDKCallType@BDKAudioVideoCallType":{"name":"BDKAudioVideoCallType","abstract":"<p>The call is audio/video.</p>","parent_name":"BDKCallType"},"Enums/BDKCallType.html#/c:@E@BDKCallType@BDKAudioUpgradableCallType":{"name":"BDKAudioUpgradableCallType","abstract":"<p>The call starts as an audio call and can be upgraded to a video call later on.</p>","parent_name":"BDKCallType"},"Enums/BDKCallType.html#/c:@E@BDKCallType@BDKAudioOnlyCallType":{"name":"BDKAudioOnlyCallType","abstract":"<p>The call is audio only and cannot be upgraded to video.</p>","parent_name":"BDKCallType"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXNotAuthenticatedErrorCode":{"name":"BCXNotAuthenticatedErrorCode","abstract":"<p>An error indicating that the operation trying to be performed requires authentication with Bandyer platform.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXAuthenticationErrorCode":{"name":"BCXAuthenticationErrorCode","abstract":"<p>An authentication error occurred.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXSimultaneousCallErrorCode":{"name":"BCXSimultaneousCallErrorCode","abstract":"<p>Trying to create a call, while another is in progress.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXConnectionErrorCode":{"name":"BCXConnectionErrorCode","abstract":"<p>A connection error occurred.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXConnectionLostErrorCode":{"name":"BCXConnectionLostErrorCode","abstract":"<p>Connection has been lost.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXNotConnectedErrorCode":{"name":"BCXNotConnectedErrorCode","abstract":"<p>Currently not connected with Bandyer.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXRequestTimedOutErrorCode":{"name":"BCXRequestTimedOutErrorCode","abstract":"<p>A request timed out.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXMalformedResponseErrorCode":{"name":"BCXMalformedResponseErrorCode","abstract":"<p>A malformed request has been received.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXDialErrorErrorCode":{"name":"BCXDialErrorErrorCode","abstract":"<p>An error occurred while dialing.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXAnswerErrorErrorCode":{"name":"BCXAnswerErrorErrorCode","abstract":"<p>An error occurred while answering.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXDeclineErrorErrorCode":{"name":"BCXDeclineErrorErrorCode","abstract":"<p>An error occurred while declining.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXHangUpErrorErrorCode":{"name":"BCXHangUpErrorErrorCode","abstract":"<p>An error occurred while hanging up.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXJoinUrlErrorCode":{"name":"BCXJoinUrlErrorCode","abstract":"<p>An error occurred while joining a call with url.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXInvalidNotificationPayloadErrorCode":{"name":"BCXInvalidNotificationPayloadErrorCode","abstract":"<p>An error occurred while parsing notification payload.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXAlreadyHandlingActionErrorCode":{"name":"BCXAlreadyHandlingActionErrorCode","abstract":"<p>Another action of the same type is being performed already.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXInvalidOperationErrorCode":{"name":"BCXInvalidOperationErrorCode","abstract":"<p>An invalid operation has been performed.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXNotSupportedActionErrorCode":{"name":"BCXNotSupportedActionErrorCode","abstract":"<p>The system has been asked to perform a not supported action.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXUnknownCallUUIDErrorCode":{"name":"BCXUnknownCallUUIDErrorCode","abstract":"<p>The system has been asked to perform an action on an unknown call.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXCannotUpgradeToVideoErrorCode":{"name":"BCXCannotUpgradeToVideoErrorCode","abstract":"<p>An audio upgradable call could not be upgraded.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXUnexpectedResponseErrorCode":{"name":"BCXUnexpectedResponseErrorCode","abstract":"<p>An unexpected response has been received from the server.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXInvalidHandleErrorCode":{"name":"BCXInvalidHandleErrorCode","abstract":"<p>An handle provider did not provide a valid handle.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXInvalidInviteErrorCode":{"name":"BCXInvalidInviteErrorCode","abstract":"<p>An invalid call invite has been received.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXMalformedCallErrorCode":{"name":"BCXMalformedCallErrorCode","abstract":"<p>An invalid call has been created.</p>","parent_name":"BCXErrorCode"},"Enums/BCXErrorCode.html#/c:@E@BCXErrorCode@BCXGenericErrorErrorCode":{"name":"BCXGenericErrorErrorCode","abstract":"<p>A generic error occurred.</p>","parent_name":"BCXErrorCode"},"Enums/BCXCallClientState.html#/c:@E@BCXCallClientState@BCXCallClientStateStopped":{"name":"BCXCallClientStateStopped","abstract":"<p>The client is stopped and cannot receive nor make calls.</p>","parent_name":"BCXCallClientState"},"Enums/BCXCallClientState.html#/c:@E@BCXCallClientState@BCXCallClientStateStarting":{"name":"BCXCallClientStateStarting","abstract":"<p>The client is starting.</p>","parent_name":"BCXCallClientState"},"Enums/BCXCallClientState.html#/c:@E@BCXCallClientState@BCXCallClientStateRunning":{"name":"BCXCallClientStateRunning","abstract":"<p>The client is running, incoming calls are detected and outgoing calls can be performed.</p>","parent_name":"BCXCallClientState"},"Enums/BCXCallClientState.html#/c:@E@BCXCallClientState@BCXCallClientStateResuming":{"name":"BCXCallClientStateResuming","abstract":"<p>The client is resuming.</p>","parent_name":"BCXCallClientState"},"Enums/BCXCallClientState.html#/c:@E@BCXCallClientState@BCXCallClientStatePaused":{"name":"BCXCallClientStatePaused","abstract":"<p>The client is paused and cannot detect incoming calls nor make outgoing calls.</p>","parent_name":"BCXCallClientState"},"Enums/BCXCallClientState.html#/c:@E@BCXCallClientState@BCXCallClientStateReconnecting":{"name":"BCXCallClientStateReconnecting","abstract":"<p>The client is trying to reconnect with Bandyer platform.</p>","parent_name":"BCXCallClientState"},"Enums/BCXUserStatus.html#/c:@E@BCXUserStatus@BCXUserStatusUnknown":{"name":"BCXUserStatusUnknown","abstract":"<p>The user state is unknown.</p>","parent_name":"BCXUserStatus"},"Enums/BCXUserStatus.html#/c:@E@BCXUserStatus@BCXUserStatusOnline":{"name":"BCXUserStatusOnline","abstract":"<p>The user is online with at least one device.</p>","parent_name":"BCXUserStatus"},"Enums/BCXUserStatus.html#/c:@E@BCXUserStatus@BCXUserStatusBusy":{"name":"BCXUserStatusBusy","abstract":"<p>The user is busy calling.</p>","parent_name":"BCXUserStatus"},"Enums/BCXUserStatus.html#/c:@E@BCXUserStatus@BCXUserStatusOffline":{"name":"BCXUserStatusOffline","abstract":"<p>The user is offline we all its devices.</p>","parent_name":"BCXUserStatus"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateUnknown":{"name":"BCXCallParticipantStateUnknown","abstract":"<p>Participant state is unknown.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateInvited":{"name":"BCXCallParticipantStateInvited","abstract":"<p>Participant has been invited to the call, and he/she hasn&rsquo;t answered or declined the call yet.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateAnswered":{"name":"BCXCallParticipantStateAnswered","abstract":"<p>Participant has answered.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateDeclined":{"name":"BCXCallParticipantStateDeclined","abstract":"<p>Participant has declined.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateDeclinedByDoNotDisturb":{"name":"BCXCallParticipantStateDeclinedByDoNotDisturb","abstract":"<p>Participant has declined because of do not disturb.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateNoAnswer":{"name":"BCXCallParticipantStateNoAnswer","abstract":"<p>Participant has declined because of no answer.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateDisconnected":{"name":"BCXCallParticipantStateDisconnected","abstract":"<p>Participant has disconnected.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateTimedOut":{"name":"BCXCallParticipantStateTimedOut","abstract":"<p>Participant timed out connecting to the call, and became unavailable.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallParticipantState.html#/c:@E@BCXCallParticipantState@BCXCallParticipantStateError":{"name":"BCXCallParticipantStateError","abstract":"<p>Participant is in an error state.</p>","parent_name":"BCXCallParticipantState"},"Enums/BCXCallType.html#/c:@E@BCXCallType@BCXCallTypeAudioVideo":{"name":"BCXCallTypeAudioVideo","abstract":"<p>Call has support for audio and video.</p>","parent_name":"BCXCallType"},"Enums/BCXCallType.html#/c:@E@BCXCallType@BCXCallTypeAudioUpgradable":{"name":"BCXCallTypeAudioUpgradable","abstract":"<p>Call has support for audio and video, but it starts out as an audio call,","parent_name":"BCXCallType"},"Enums/BCXCallType.html#/c:@E@BCXCallType@BCXCallTypeAudioOnly":{"name":"BCXCallTypeAudioOnly","abstract":"<p>Call has support for audio only and cannot be upgraded to an audio/video call.</p>","parent_name":"BCXCallType"},"Enums/BCXDeclineReason.html#/c:@E@BCXDeclineReason@BCXDeclineReasonUnknown":{"name":"BCXDeclineReasonUnknown","abstract":"<p>Call has been declined but the reason is unknown.</p>","parent_name":"BCXDeclineReason"},"Enums/BCXDeclineReason.html#/c:@E@BCXDeclineReason@BCXDeclineReasonNone":{"name":"BCXDeclineReasonNone","abstract":"<p>Call has not been declined.</p>","parent_name":"BCXDeclineReason"},"Enums/BCXDeclineReason.html#/c:@E@BCXDeclineReason@BCXDeclineReasonDoNotDisturb":{"name":"BCXDeclineReasonDoNotDisturb","abstract":"<p>Call has been declined because of do not disturb.</p>","parent_name":"BCXDeclineReason"},"Enums/BCXDeclineReason.html#/c:@E@BCXDeclineReason@BCXDeclineReasonNoAnswer":{"name":"BCXDeclineReasonNoAnswer","abstract":"<p>Call has been declined because of no answer.</p>","parent_name":"BCXDeclineReason"},"Enums/BCXDeclineReason.html#/c:@E@BCXDeclineReason@BCXDeclineReasonError":{"name":"BCXDeclineReasonError","abstract":"<p>Call has been declined because of an error.</p>","parent_name":"BCXDeclineReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonUnknown":{"name":"BCXCallEndReasonUnknown","abstract":"<p>Call has ended but the reason is unknown.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonNone":{"name":"BCXCallEndReasonNone","abstract":"<p>Call is not ended.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonHangUp":{"name":"BCXCallEndReasonHangUp","abstract":"<p>Call has been hung up.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonDeclined":{"name":"BCXCallEndReasonDeclined","abstract":"<p>Call has been declined.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonAnsweredOnAnotherDevice":{"name":"BCXCallEndReasonAnsweredOnAnotherDevice","abstract":"<p>Call has been answered or declined on another device.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonUserDisconnected":{"name":"BCXCallEndReasonUserDisconnected","abstract":"<p>Call has ended because the opponent has disconnected.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonTimedOut":{"name":"BCXCallEndReasonTimedOut","abstract":"<p>Call has ended because the opponent did not join the room in time.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallEndReason.html#/c:@E@BCXCallEndReason@BCXCallEndReasonError":{"name":"BCXCallEndReasonError","abstract":"<p>Call has ended because of an error.</p>","parent_name":"BCXCallEndReason"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateIdle":{"name":"BCXCallStateIdle","abstract":"<p>The initial state.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateDialing":{"name":"BCXCallStateDialing","abstract":"<p>Call is in dialing state, that is call has started and is waiting for anyone to answer.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateRinging":{"name":"BCXCallStateRinging","abstract":"<p>Call is in ringing state when somebody called you and you didn&rsquo;t answered or declined it yet.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateAnswering":{"name":"BCXCallStateAnswering","abstract":"<p>Call is in answering state when you are answering the call and the server didn&rsquo;t ack you yet.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateDeclining":{"name":"BCXCallStateDeclining","abstract":"<p>Call is in declining state when you are declining the call and the server didn&rsquo;t ack you yet.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateHangingUp":{"name":"BCXCallStateHangingUp","abstract":"<p>Call is in hanging up state when you are hanging up the call and the server didn&rsquo;t ack you yet.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateConnecting":{"name":"BCXCallStateConnecting","abstract":"<p>Call is in connecting state, when it is connecting to the host server.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateConnected":{"name":"BCXCallStateConnected","abstract":"<p>Call is in connected state, when it is connected to the host server.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateEnded":{"name":"BCXCallStateEnded","abstract":"<p>Call is in ended state, when it has ended.</p>","parent_name":"BCXCallState"},"Enums/BCXCallState.html#/c:@E@BCXCallState@BCXCallStateFailed":{"name":"BCXCallStateFailed","abstract":"<p>Call is in failed state, when it has failed.</p>","parent_name":"BCXCallState"},"Enums/BCXCallDirection.html#/c:@E@BCXCallDirection@BCXCallDirectionIncoming":{"name":"BCXCallDirectionIncoming","abstract":"<p>Call is incoming.</p>","parent_name":"BCXCallDirection"},"Enums/BCXCallDirection.html#/c:@E@BCXCallDirection@BCXCallDirectionOutgoing":{"name":"BCXCallDirectionOutgoing","abstract":"<p>Call is outgoing.</p>","parent_name":"BCXCallDirection"},"Enums/BCHChatClientState.html#/c:@E@BCHChatClientState@BCHChatClientStateStopped":{"name":"BCHChatClientStateStopped","abstract":"<p>The client is stopped. Chat is not available.</p>","parent_name":"BCHChatClientState"},"Enums/BCHChatClientState.html#/c:@E@BCHChatClientState@BCHChatClientStateStarting":{"name":"BCHChatClientStateStarting","abstract":"<p>The client is starting.</p>","parent_name":"BCHChatClientState"},"Enums/BCHChatClientState.html#/c:@E@BCHChatClientState@BCHChatClientStateRunning":{"name":"BCHChatClientStateRunning","abstract":"<p>The client is running, incoming messages are detected and outgoing messages can be sent.</p>","parent_name":"BCHChatClientState"},"Enums/BCHChatClientState.html#/c:@E@BCHChatClientState@BCHChatClientStateResuming":{"name":"BCHChatClientStateResuming","abstract":"<p>The client is resuming.</p>","parent_name":"BCHChatClientState"},"Enums/BCHChatClientState.html#/c:@E@BCHChatClientState@BCHChatClientStatePaused":{"name":"BCHChatClientStatePaused","abstract":"<p>The client is paused and cannot detect incoming messages nor send outgoing messages.</p>","parent_name":"BCHChatClientState"},"Enums/BCHChatClientState.html#/c:@E@BCHChatClientState@BCHChatClientStateFailed":{"name":"BCHChatClientStateFailed","abstract":"<p>The client has failed.</p>","parent_name":"BCHChatClientState"},"Enums/BCHChatClientState.html":{"name":"BCHChatClientState","abstract":"<p>An enumeration representing the states a client can be in.</p>"},"Enums/BCXCallDirection.html":{"name":"BCXCallDirection","abstract":"<p>An enumeration representing the call direction.</p>"},"Enums/BCXCallState.html":{"name":"BCXCallState","abstract":"<p>An enumeration representing the states a call can be in.</p>"},"Enums/BCXCallEndReason.html":{"name":"BCXCallEndReason","abstract":"<p>An enumeration representing the possible call end reasons.</p>"},"Enums/BCXDeclineReason.html":{"name":"BCXDeclineReason","abstract":"<p>An enumeration representing the possible decline reasons.</p>"},"Enums/BCXCallType.html":{"name":"BCXCallType","abstract":"<p>An enumeration representing the supported call types.</p>"},"Enums/BCXCallParticipantState.html":{"name":"BCXCallParticipantState","abstract":"<p>An enumeration representing the states a participant can be in, during a call.</p>"},"Enums/BCXUserStatus.html":{"name":"BCXUserStatus","abstract":"<p>An enumeration representing the state a user can be in.</p>"},"Enums/BCXCallClientState.html":{"name":"BCXCallClientState","abstract":"<p>An enumeration representing the states a client can be in.</p>"},"Enums/BCXErrorCode.html":{"name":"BCXErrorCode","abstract":"<p>An enumeration of the possible error codes encountered when an error occurs.</p>"},"Enums/BDKCallType.html":{"name":"BDKCallType","abstract":"<p>An enumeration of the types of call the sdk can perform.</p>"},"Enums/CallPresentationErrorCode.html":{"name":"CallPresentationErrorCode","abstract":"<p>The possible error codes that occurs during the presentation of an instance of <code>CallViewController</code>.</p>"},"Constants.html#/c:@kBCXErrorDomain":{"name":"kBCXErrorDomain","abstract":"<p>The BandyerCommunicationCenter module error domain string.</p>"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(cpy)instance":{"name":"instance","abstract":"<p>The window unique instance.</p>","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(py)callDelegate":{"name":"callDelegate","abstract":"<p>The window&rsquo;s delegate.</p>","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(py)intent":{"name":"intent","abstract":"<p>The intent used to start the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BDKCallViewController.html\">BDKCallViewController</a></code>.</p>","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(im)init":{"name":"init()","abstract":"<p>Initialize a <code>CallWindow</code> instance.</p>","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(im)shouldPresentCallViewControllerWithIntent:completion:":{"name":"shouldPresentCallViewController(intent:completion:)","abstract":"<p>Presents a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BDKCallViewController.html\">BDKCallViewController</a></code> as its root view controller. If there is already another active call being handled an error will be raised and reported in the completion block","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(im)presentCallViewControllerFor:completion:":{"name":"presentCallViewController(for:completion:)","abstract":"<p>Presents a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BDKCallViewController.html\">BDKCallViewController</a></code> as its root view controller. If there is already another active call being handled an error will be raised and reported in the completion block","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(im)dismissCallViewControllerWithCompletion:":{"name":"dismissCallViewController(completion:)","abstract":"<p>Will dismiss the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BDKCallViewController.html\">BDKCallViewController</a></code> instance without deallocate it.</p>","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(im)setConfiguration:":{"name":"setConfiguration(_:)","abstract":"<p>Sets the call view controller configuration to be used.</p>","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(im)handleINStartVideoCallIntent:":{"name":"handle(startVideoCallIntent:)","abstract":"<p>Handles a Siri INStartVideoCallIntent. This intent is going to be provided by the system when CallKit is enabled and the user taps on the video button in the system call UI.","parent_name":"CallWindow"},"Classes/CallWindow.html#/c:@M@Bandyer@objc(cs)BDKCallWindow(im)handleINStartCallIntent:":{"name":"handle(startCallIntent:)","abstract":"<p>Handles a Siri INStartCallIntent. This intent is going to be provided by the system when CallKit is enabled and the user taps on the video button in the system call UI.","parent_name":"CallWindow"},"Classes/CallPresentationErrorDomain.html#/c:@M@Bandyer@objc(cs)BDKCallPresentationErrorDomain(cpy)value":{"name":"value","abstract":"<p>The value of the domain.</p>","parent_name":"CallPresentationErrorDomain"},"Classes/CallBannerView.html#/c:@M@Bandyer@objc(cs)BDKCallBannerView(im)init":{"name":"init()","abstract":"<p>Initialize a <code>CallBannerView</code> instance.</p>","parent_name":"CallBannerView"},"Classes/CallBannerController.html#/c:@M@Bandyer@objc(cs)BDKCallBannerController(py)delegate":{"name":"delegate","abstract":"<p>The controller&rsquo;s delegate.</p>","parent_name":"CallBannerController"},"Classes/CallBannerController.html#/c:@M@Bandyer@objc(cs)BDKCallBannerController(py)parentViewController":{"name":"parentViewController","abstract":"<p>The view controller hosting the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CallBannerView.html\">CallBannerView</a></code></p>","parent_name":"CallBannerController"},"Classes/CallBannerController.html#/c:@M@Bandyer@objc(cs)BDKCallBannerController(im)init":{"name":"init()","abstract":"<p>Initialize a <code>CallBannerController</code> instance.</p>","parent_name":"CallBannerController"},"Classes/CallBannerController.html#/c:@M@Bandyer@objc(cs)BDKCallBannerController(im)show":{"name":"show()","abstract":"<p>Starts observing for any ongoing call an when it detects there&rsquo;s at least one call in progress","parent_name":"CallBannerController"},"Classes/CallBannerController.html#/c:@M@Bandyer@objc(cs)BDKCallBannerController(im)hide":{"name":"hide()","abstract":"<p>Stops observing for any ongoing call hiding the &ldquo;return to call&rdquo; bar at the top of the screen if it is shown.","parent_name":"CallBannerController"},"Classes/CallBannerController.html#/c:@M@Bandyer@objc(cs)BDKCallBannerController(im)viewWillTransitionTo:withTransitionCoordinator:":{"name":"viewWillTransition(to:withTransitionCoordinator:)","abstract":"<p>You should call this method to notify the controller about size changes of the host controller&rsquo;s view.","parent_name":"CallBannerController"},"Classes/OpenDownloadsIntent.html#/c:@M@Bandyer@objc(cs)BDKOpenDownloadsIntent(py)UUID":{"name":"uuid","abstract":"<p>The intent unique identifier.</p>","parent_name":"OpenDownloadsIntent"},"Classes/MessageNotificationController.html#/c:@M@Bandyer@objc(cs)BCHMessageNotificationController(py)delegate":{"name":"delegate","abstract":"<p>The controller&rsquo;s delegate.</p>","parent_name":"MessageNotificationController"},"Classes/MessageNotificationController.html#/c:@M@Bandyer@objc(cs)BCHMessageNotificationController(py)parentViewController":{"name":"parentViewController","abstract":"<div class=\"aside aside-warning\">","parent_name":"MessageNotificationController"},"Classes/MessageNotificationController.html#/c:@M@Bandyer@objc(cs)BCHMessageNotificationController(py)configuration":{"name":"configuration","abstract":"<p>The controller configuration to be used.</p>","parent_name":"MessageNotificationController"},"Classes/MessageNotificationController.html#/c:@M@Bandyer@objc(cs)BCHMessageNotificationController(im)show":{"name":"show()","abstract":"<p>Starts the in-app notifications services.</p>","parent_name":"MessageNotificationController"},"Classes/MessageNotificationController.html#/c:@M@Bandyer@objc(cs)BCHMessageNotificationController(im)hide":{"name":"hide()","abstract":"<p>Stops the in-app notifications services.</p>","parent_name":"MessageNotificationController"},"Classes/MessageNotificationControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHMessageNotificationControllerConfiguration(im)init":{"name":"init()","abstract":"<p>Creates a configuration object for Message notification controller instance with some default values.","parent_name":"MessageNotificationControllerConfiguration"},"Classes/MessageNotificationControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHMessageNotificationControllerConfiguration(im)initWithUserInfoFetcher:":{"name":"init(userInfoFetcher:)","abstract":"<p>Creates a configuration object for Message notification controller instance.</p>","parent_name":"MessageNotificationControllerConfiguration"},"Classes/ChannelViewControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHChannelViewControllerConfiguration(im)init":{"name":"init()","abstract":"<p>Initialize a <code>ChannelViewControllerConfiguration</code> instance with default values.","parent_name":"ChannelViewControllerConfiguration"},"Classes/ChannelViewControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHChannelViewControllerConfiguration(im)initWithUserInfoFetcher:":{"name":"init(userInfoFetcher:)","abstract":"<p>Initialize a <code>ChannelViewControllerConfiguration</code> instance with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/BDKUserInfoFetcher.html\">BDKUserInfoFetcher</a></code> instance provided as argument.","parent_name":"ChannelViewControllerConfiguration"},"Classes/ChannelViewControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHChannelViewControllerConfiguration(im)initWithFormatter:":{"name":"init(formatter:)","abstract":"<p>Initialize a <code>ChannelViewControllerConfiguration</code> instance with the <code>Formatter</code> instance provided as argument.","parent_name":"ChannelViewControllerConfiguration"},"Classes/ChannelViewControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHChannelViewControllerConfiguration(im)initWithAudioButton:videoButton:userInfoFetcher:formatter:":{"name":"init(audioButton:videoButton:userInfoFetcher:formatter:)","abstract":"<p>Initialize a <code>ChannelViewControllerConfiguration</code> instance with the objects and values provided as arguments.</p>","parent_name":"ChannelViewControllerConfiguration"},"Classes/ChannelViewControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHChannelViewControllerConfiguration(im)initWithAudioButton:videoButton:userInfoFetcher:":{"name":"init(audioButton:videoButton:userInfoFetcher:)","abstract":"<p>Initialize a <code>ChannelViewControllerConfiguration</code> instance using the values provided as arguments and a default <code>Formatter</code>.</p>","parent_name":"ChannelViewControllerConfiguration"},"Classes/ChannelViewControllerConfiguration.html#/c:@M@Bandyer@objc(cs)BCHChannelViewControllerConfiguration(im)initWithAudioButton:videoButton:formatter:":{"name":"init(audioButton:videoButton:formatter:)","abstract":"<p>Initialize a <code>ChannelViewControllerConfiguration</code> instance using the values provided as arguments and a default <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/BDKUserInfoFetcher.html\">BDKUserInfoFetcher</a></code> instance.</p>","parent_name":"ChannelViewControllerConfiguration"},"Classes/ChannelViewController.html#/c:@M@Bandyer@objc(cs)BCHChannelViewController(py)configuration":{"name":"configuration","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ChannelViewControllerConfiguration.html\">ChannelViewControllerConfiguration</a></code> to be used by this view controller.</p>","parent_name":"ChannelViewController"},"Classes/ChannelViewController.html#/c:@M@Bandyer@objc(cs)BCHChannelViewController(py)delegate":{"name":"delegate","abstract":"<p>The view controller&rsquo;s delegate.</p>","parent_name":"ChannelViewController"},"Classes/ChannelViewController.html#/c:@M@Bandyer@objc(cs)BCHChannelViewController(py)intent":{"name":"intent","abstract":"<p>Starts processing the intent provided as argument.","parent_name":"ChannelViewController"},"Classes/ChannelViewController.html#/c:@M@Bandyer@objc(cs)BCHChannelViewController(im)init":{"name":"init()","abstract":"<p>Convenience initializer, it is the same as calling ChannelViewController(nibName: nil, bundle: nil)</p>","parent_name":"ChannelViewController"},"Classes/OpenChatIntent.html#/c:@M@Bandyer@objc(cs)BCHOpenChatIntent(py)UUID":{"name":"uuid","abstract":"<p>The intent unique identifier.</p>","parent_name":"OpenChatIntent"},"Classes/OpenChatIntent.html#/c:@M@Bandyer@objc(cs)BCHOpenChatIntent(cm)openChatWith:":{"name":"openChat(with:)","abstract":"<p>Generates a new <code>OpenChatIntent</code> instance from the parameter provided.</p>","parent_name":"OpenChatIntent"},"Classes/OpenChatIntent.html#/c:@M@Bandyer@objc(cs)BCHOpenChatIntent(cm)openChatFrom:":{"name":"openChat(from:)","abstract":"<p>Generates a new <code>OpenChatIntent</code> instance from the parameter provided.</p>","parent_name":"OpenChatIntent"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(py)alias":{"name":"alias","abstract":"<p>The user id.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(py)firstName":{"name":"firstName","abstract":"<p>The user first name. Can be nil.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(py)lastName":{"name":"lastName","abstract":"<p>The user last name. Can be nil.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(py)email":{"name":"email","abstract":"<p>The user email. Can be nil.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(py)nickname":{"name":"nickname","abstract":"<p>The user nickname. Can ben nil.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(py)imageURL":{"name":"imageURL","abstract":"<p>The user image local URL. The URL must be a file URL, it cannot be a remote URL.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(py)image":{"name":"image","abstract":"<p>The UIImage loaded from the imageURL provided.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKUserInfoDisplayItem.html#/c:objc(cs)BDKUserInfoDisplayItem(im)initWithAlias:":{"name":"-initWithAlias:","abstract":"<p>Initialize a new item for the alias provided as argument.</p>","parent_name":"BDKUserInfoDisplayItem"},"Classes/BDKCallViewController.html#/c:objc(cs)BDKCallViewController(py)delegate":{"name":"delegate","abstract":"<p>The view controller&rsquo;s delegate.</p>","parent_name":"BDKCallViewController"},"Classes/BDKCallViewController.html#/c:objc(cs)BDKCallViewController(im)setConfiguration:":{"name":"-setConfiguration:","abstract":"<p>Sets the view controller configuration to be used.</p>","parent_name":"BDKCallViewController"},"Classes/BDKCallViewController.html#/c:objc(cs)BDKCallViewController(im)handleIntent:":{"name":"-handleIntent:","abstract":"<p>Starts processing the intent provided as argument.","parent_name":"BDKCallViewController"},"Classes/BDKCallViewController.html#/c:objc(cs)BDKCallViewController(im)handleINStartVideoCallIntent:":{"name":"-handleINStartVideoCallIntent:","abstract":"<p>Handles a Siri INStartVideoCallIntent. This intent is going to be provided by the system when CallKit is enabled and the user taps on","parent_name":"BDKCallViewController"},"Classes/BDKCallViewController.html#/c:objc(cs)BDKCallViewController(im)handleINStartCallIntent:":{"name":"-handleINStartCallIntent:","abstract":"<p>Handles a Siri INStartCallIntent. This intent is going to be provided by the system when CallKit is enabled and the user taps on","parent_name":"BDKCallViewController"},"Classes/BDKCallViewControllerConfiguration.html#/c:objc(cs)BDKCallViewControllerConfiguration(py)userInfoFetcher":{"name":"userInfoFetcher","abstract":"<p>The user info fetcher instance that is going to be used by view controller.</p>","parent_name":"BDKCallViewControllerConfiguration"},"Classes/BDKCallViewControllerConfiguration.html#/c:objc(cs)BDKCallViewControllerConfiguration(py)callInfoTitleFormatter":{"name":"callInfoTitleFormatter","abstract":"<p>The formatter used to format the callee or caller information in the call header view title.</p>","parent_name":"BDKCallViewControllerConfiguration"},"Classes/BDKCallViewControllerConfiguration.html#/c:objc(cs)BDKCallViewControllerConfiguration(py)fakeCapturerFileURL":{"name":"fakeCapturerFileURL","abstract":"<p>The url of the mp4 file used when running the application in the simulator.","parent_name":"BDKCallViewControllerConfiguration"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(py)callee":{"name":"callee","abstract":"<p>The array of ids for the callee to be called provided on initialization.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(py)record":{"name":"record","abstract":"<p>A flag representing whether the call should be recorded or not.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(py)maximumDuration":{"name":"maximumDuration","abstract":"<p>The maximum duration for the call expressed in seconds.","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(py)callType":{"name":"callType","abstract":"<p>The call type.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(cm)intentWithCallee:":{"name":"+intentWithCallee:","abstract":"<p>Initialize an intent for an audio/video call with the callee provided as arguments.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(cm)intentWithCallee:type:":{"name":"+intentWithCallee:type:","abstract":"<p>Initialize an intent with the callee, types provided as arguments.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(cm)intentWithCallee:type:record:":{"name":"+intentWithCallee:type:record:","abstract":"<p>Initialize an intent with the callee, types and record flag provided as arguments.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(cm)intentWithCallee:type:maximumDuration:":{"name":"+intentWithCallee:type:maximumDuration:","abstract":"<p>Initialize an intent with the callee, types and duration provided as arguments.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKMakeCallIntent.html#/c:objc(cs)BDKMakeCallIntent(cm)intentWithCallee:type:record:maximumDuration:":{"name":"+intentWithCallee:type:record:maximumDuration:","abstract":"<p>Initialize an intent with the callee, types and options provided as arguments.</p>","parent_name":"BDKMakeCallIntent"},"Classes/BDKJoinURLIntent.html#/c:objc(cs)BDKJoinURLIntent(py)url":{"name":"url","abstract":"<p>The url provided during initialization</p>","parent_name":"BDKJoinURLIntent"},"Classes/BDKJoinURLIntent.html#/c:objc(cs)BDKJoinURLIntent(cm)intentWithURL:":{"name":"+intentWithURL:","abstract":"<p>Initialize an intent with the URL provided as argument.</p>","parent_name":"BDKJoinURLIntent"},"Classes/BDKIncomingCallHandlingIntent.html#/c:objc(cs)BDKIncomingCallHandlingIntent(im)init":{"name":"-init","abstract":"<p>Initialize an instance of <code>BDKIncomingCallHandlingIntent</code> class</p>","parent_name":"BDKIncomingCallHandlingIntent"},"Classes/BandyerSDK.html#/c:objc(cs)BandyerSDK(py)notificationsCoordinator":{"name":"notificationsCoordinator","abstract":"<p>The in-app notifications coordinator instance. The service provided in this property is not started by default,","parent_name":"BandyerSDK"},"Classes/BandyerSDK.html#/c:objc(cs)BandyerSDK(py)config":{"name":"config","abstract":"<p>The configuration used by the module, provided in initialization method.</p>","parent_name":"BandyerSDK"},"Classes/BandyerSDK.html#/c:objc(cs)BandyerSDK(py)callClient":{"name":"callClient","abstract":"<p>The call client instance.</p>","parent_name":"BandyerSDK"},"Classes/BandyerSDK.html#/c:objc(cs)BandyerSDK(py)chatClient":{"name":"chatClient","abstract":"<p>The chat client instance.</p>","parent_name":"BandyerSDK"},"Classes/BandyerSDK.html#/c:objc(cs)BandyerSDK(im)initializeWithApplicationId:":{"name":"-initializeWithApplicationId:","abstract":"<p>Initialize the module with the appId provided as argument, using a default configuration.</p>","parent_name":"BandyerSDK"},"Classes/BandyerSDK.html#/c:objc(cs)BandyerSDK(im)initializeWithApplicationId:config:":{"name":"-initializeWithApplicationId:config:","abstract":"<p>Initialize the module with the appId and the configuration object provided as arguments.</p>","parent_name":"BandyerSDK"},"Classes/BandyerSDK.html#/c:objc(cs)BandyerSDK(cm)instance":{"name":"+instance","abstract":"<p>Returns the global singleton instance.</p>","parent_name":"BandyerSDK"},"Classes/BDKEnvironment.html#/c:objc(cs)BDKEnvironment(cpy)production":{"name":"production","abstract":"<p>Returns the environment object used in production.</p>","parent_name":"BDKEnvironment"},"Classes/BDKEnvironment.html#/c:objc(cs)BDKEnvironment(cpy)sandbox":{"name":"sandbox","abstract":"<p>Returns the environment object used in sandbox.</p>","parent_name":"BDKEnvironment"},"Classes/BDKEnvironment.html#/c:objc(cs)BDKEnvironment(py)name":{"name":"name","abstract":"<p>Returns the name of the environment.</p>","parent_name":"BDKEnvironment"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)userInfoFetcher":{"name":"userInfoFetcher","abstract":"<p>The user info fetcher instance that is going to be used whenever the sdk needs","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)environment":{"name":"environment","abstract":"<p>The environment where the module will run (e.g production, sandbox, and so on&hellip;).</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)callKitEnabled":{"name":"callKitEnabled","abstract":"<p>A flag indicating whether CallKit should be enabled or disabled.","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)supportedHandleTypes":{"name":"supportedHandleTypes","abstract":"<p>A set containing which <code>CXHandleType</code> your app supports.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)nativeUILocalizedName":{"name":"nativeUILocalizedName","abstract":"<p>The localized name of your app that will be shown in the native System UI when a call is being performed.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)nativeUIRingToneSound":{"name":"nativeUIRingToneSound","abstract":"<p>The name of the sound resource in the app bundle to be used as ringtone when a call is received.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)nativeUITemplateIconImageData":{"name":"nativeUITemplateIconImageData","abstract":"<p>The PNG data for the icon image that will displayed in the native System UI for the button which takes the user from the system UI to","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)handleProvider":{"name":"handleProvider","abstract":"<p>An object conforming to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/BCXHandleProvider.html\">BCXHandleProvider</a></code> protocol that will be used by the module when a CXHandle object must be created.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)notificationPayloadKeyPath":{"name":"notificationPayloadKeyPath","abstract":"<p>The keypath the sdk will search for the Bandyer notification payload in the push notification received from APNS.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(py)pushRegistryDelegate":{"name":"pushRegistryDelegate","abstract":"<p>An object conforming to <code>PKPushRegistryDelegate</code> protocol that will be notified when the voip push token has been updated.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(cpy)logLevel":{"name":"logLevel","abstract":"<p>This property sets the logging level for the module. If you want to turn on logging facilities you can set this value to one of the","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(cpy)logContext":{"name":"logContext","abstract":"<p>The log context for the module, any logging statement generated from the module is tagged with this value. You can use it to filter out","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(cpy)logTag":{"name":"logTag","abstract":"<p>The log tag for the module, any logging statement generated from the module is tagged with this value.","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(cm)setLog:":{"name":"+setLog:","abstract":"<p>Sets the log object responsible for logging log messages to loggers.","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(cm)addLogger:":{"name":"+addLogger:","abstract":"<p>Adds the <code>logger</code> to the current log object.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(cm)removeLogger:":{"name":"+removeLogger:","abstract":"<p>Removes the <code>logger</code> from the current log object.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(im)init":{"name":"-init","abstract":"<p>Initialize a default configuration instance with default values set, for &ldquo;Production&rdquo; environment.</p>","parent_name":"BDKConfig"},"Classes/BDKConfig.html#/c:objc(cs)BDKConfig(cm)new":{"name":"+new","abstract":"<p>Initialize a default configuration instance with default values set, for &ldquo;Production&rdquo; environment.</p>","parent_name":"BDKConfig"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(py)recording":{"name":"recording","abstract":"<p>A flag indicating whether recording is enabled or not</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(py)duration":{"name":"duration","abstract":"<p>The maximum duration in seconds for the call, if nil the call will end when all participants leave</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(py)callType":{"name":"callType","abstract":"<p>The call type.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(im)isAudioVideo":{"name":"-isAudioVideo","abstract":"<p>Returns a flag indicating whether the call type is audio / video, or not.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(im)isAudioUpgradable":{"name":"-isAudioUpgradable","abstract":"<p>Returns a flag indicating whether the call type is audio upgradable, or not.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(im)isAudioOnly":{"name":"-isAudioOnly","abstract":"<p>Returns a flag indicating whether the call type is audio only, or not.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(im)optionsWithRecording:":{"name":"-optionsWithRecording:","abstract":"<p>Creates a new call options instance copying the receiver and updating its recording flag with the value provided as argument.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(im)optionsWithDuration:":{"name":"-optionsWithDuration:","abstract":"<p>Creates a new call options instance copying the receiver and updating its duration value with the value provided as argument.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(im)optionsWithCallType:":{"name":"-optionsWithCallType:","abstract":"<p>Creates a new call options instance copying the receiver and updating its call type value with the value provided as argument.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsWithRecording:":{"name":"+optionsWithRecording:","abstract":"<p>Creates an option instance setting the recording option, and the call type to <code>BCXCallTypeAudioVideo</code>.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsWithDuration:":{"name":"+optionsWithDuration:","abstract":"<p>Creates an option instance setting the maximum duration for a call in seconds, and the call type to <code>BCXCallTypeAudioVideo</code>.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsWithCallType:":{"name":"+optionsWithCallType:","abstract":"<p>Creates an option instance setting the call type to the value provided as argument.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsWithRecording:duration:":{"name":"+optionsWithRecording:duration:","abstract":"<p>Creates an option instance specifying whether call recording should be enabled or not,","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsWithRecording:duration:callType:":{"name":"+optionsWithRecording:duration:callType:","abstract":"<p>Creates an option instance specifying whether call recording should be enabled or not,","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsFromOptions:withRecording:":{"name":"+optionsFromOptions:withRecording:","abstract":"<p>Creates a copy of the <code>options</code> provided as argument, using the recording flag provided as second argument.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsFromOptions:withDuration:":{"name":"+optionsFromOptions:withDuration:","abstract":"<p>Creates a copy of the <code>options</code> provided as argument, using the duration provided as second argument.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html#/c:objc(cs)BCXCallOptions(cm)optionsFromOptions:withCallType:":{"name":"+optionsFromOptions:withCallType:","abstract":"<p>Creates a copy of the <code>options</code> provided as argument, using the call type provided as second argument.</p>","parent_name":"BCXCallOptions"},"Classes/BCXCallOptions.html":{"name":"BCXCallOptions","abstract":"<p>A value object representing the options used when creating a call.</p>"},"Classes/BDKConfig.html":{"name":"BDKConfig","abstract":"<p>A class encapsulating the configuration options for the bandyer sdk.</p>"},"Classes/BDKEnvironment.html":{"name":"BDKEnvironment","abstract":"<p>The environment in which the sdk will run.</p>"},"Classes/BandyerSDK.html":{"name":"BandyerSDK","abstract":"<p>The Bandyer SDK facade.</p>"},"Classes.html#/c:objc(cs)BDKChatNotification":{"name":"BDKChatNotification","abstract":"<p>An opaque object representing a chat notification.</p>"},"Classes.html#/c:objc(cs)BDKFileShareNotification":{"name":"BDKFileShareNotification","abstract":"<p>An opaque object representing a file share notification.</p>"},"Classes/BDKIncomingCallHandlingIntent.html":{"name":"BDKIncomingCallHandlingIntent","abstract":"<p>Represents the intent of handling a incoming call."},"Classes/BDKJoinURLIntent.html":{"name":"BDKJoinURLIntent","abstract":"<p>Represents the intent of starting a call from an URL.</p>"},"Classes/BDKMakeCallIntent.html":{"name":"BDKMakeCallIntent","abstract":"<p>Represents the request of making an outgoing call.</p>"},"Classes/BDKCallViewControllerConfiguration.html":{"name":"BDKCallViewControllerConfiguration","abstract":"<p>A class holding the customization available for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BDKCallViewController.html\">BDKCallViewController</a></code> instance.</p>"},"Classes/BDKCallViewController.html":{"name":"BDKCallViewController","abstract":"<p>A view controller showing the user interface for the intent provided."},"Classes/BDKUserInfoDisplayItem.html":{"name":"BDKUserInfoDisplayItem","abstract":"<p>A class holding user display information.</p>"},"Classes/OpenChatIntent.html":{"name":"OpenChatIntent","abstract":"<p>Represents the intent of starting a chat.</p>"},"Classes/ChannelViewController.html":{"name":"ChannelViewController","abstract":"<p>A view controller showing the &ldquo;chat&rdquo; user interface of the current user with the user specified in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/OpenChatIntent.html\">OpenChatIntent</a></code> provided."},"Classes/ChannelViewControllerConfiguration.html":{"name":"ChannelViewControllerConfiguration","abstract":"<p>A class holding the customization available for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ChannelViewController.html\">ChannelViewController</a></code> instance.</p>"},"Classes/MessageNotificationControllerConfiguration.html":{"name":"MessageNotificationControllerConfiguration","abstract":"<p>A class holding the customization available for a <code>MessageNotificationView</code> instance.</p>"},"Classes/MessageNotificationController.html":{"name":"MessageNotificationController","abstract":"<p>A  controller showing the user interface for the message notification.</p>"},"Classes/OpenDownloadsIntent.html":{"name":"OpenDownloadsIntent","abstract":"<p>Represents the intent of navigating to the Bandyer downloads screen.</p>"},"Classes/CallBannerController.html":{"name":"CallBannerController","abstract":"<p>A  controller managing the &ldquo;return to call&rdquo; bar user interface. Once started, this controller will observe for any ongoing call and"},"Classes/CallBannerView.html":{"name":"CallBannerView","abstract":"<p>Represents the &ldquo;return to call&rdquo; bar presented at the top of the screen when a call is in progress.</p>"},"Classes/CallPresentationErrorDomain.html":{"name":"CallPresentationErrorDomain","abstract":"<p>The domain for a <code>BDKCallPresentationError</code>.</p>"},"Classes/CallWindow.html":{"name":"CallWindow","abstract":"<p>A <code>UIWindow</code> subclass having a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BDKCallViewController.html\">BDKCallViewController</a></code>instance as its rootViewController.</p>"},"Categories/PKPushCredentials%28BCXAdditions%29.html#/c:objc(cs)PKPushCredentials(py)bcx_tokenAsString":{"name":"bcx_tokenAsString","abstract":"<p>An utility method returning the push token as a string</p>","parent_name":"PKPushCredentials(BCXAdditions)"},"Categories/PKPushCredentials%28BCXAdditions%29.html":{"name":"PKPushCredentials(BCXAdditions)","abstract":"<p>A category adding utlity method for retrieving the push token as a string.</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type%20Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}